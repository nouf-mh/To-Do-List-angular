{"ast":null,"code":"import { Subject } from \"rxjs\";\nimport { Router } from '@angular/router';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nexport let TasksService = /*#__PURE__*/(() => {\n  class TasksService {\n    constructor(router) {\n      this.router = router;\n      this.updates = new Subject();\n      this.list = [{\n        id: 1,\n        title: 'Read a book',\n        priority: \"High\",\n        value: false\n      }, {\n        id: 2,\n        title: 'Organize office',\n        priority: \"Middle\",\n        value: true\n      }, {\n        id: 3,\n        title: 'Meet My parent',\n        priority: \"High\",\n        value: false\n      }, {\n        id: 4,\n        title: 'Go to gym',\n        priority: \"Low\",\n        value: false\n      }, {\n        id: 5,\n        title: 'Buy Dinner',\n        priority: \"Middle\",\n        value: false\n      }];\n      this.priority_list = ['High', 'Middle', 'Low'];\n    }\n\n    getAllList() {\n      return this.list;\n    }\n\n    getAllPriorityList() {\n      return this.priority_list;\n    }\n\n    addToList(data) {\n      this.list = this.list.concat([data]);\n      this.updates.next({});\n    }\n\n    updateItem(data) {\n      const indexItem = this.list.findIndex(obj => obj.id === data.id);\n      this.list[indexItem] = data;\n      this.updates.next({});\n      this.router.navigate(['/list']);\n    }\n\n    removeFromList(data) {\n      this.list = this.list.filter(item => item.id !== data.id);\n      this.updates.next({});\n    }\n\n  }\n\n  TasksService.ɵfac = function TasksService_Factory(t) {\n    return new (t || TasksService)(i0.ɵɵinject(i1.Router));\n  };\n\n  TasksService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: TasksService,\n    factory: TasksService.ɵfac,\n    providedIn: 'root'\n  });\n  return TasksService;\n})();","map":null,"metadata":{},"sourceType":"module"}