{"ast":null,"code":"import { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/tasks.service\";\nimport * as i2 from \"@angular/forms\";\nimport * as i3 from \"@angular/common\";\n\nfunction AddComponent_p_15_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\", 19);\n    i0.ɵɵtext(1, \" Required \");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction AddComponent_option_21_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 20);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const item_r2 = ctx.$implicit;\n    i0.ɵɵproperty(\"ngValue\", item_r2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", item_r2, \" \");\n  }\n}\n\nexport let AddComponent = /*#__PURE__*/(() => {\n  class AddComponent {\n    // form = new FormGroup({});\n    constructor(tasksService, fb) {\n      this.tasksService = tasksService;\n      this.fb = fb;\n      this.showDialog = false;\n      this.tasks = [];\n    }\n\n    ngOnInit() {\n      this.priority_list = this.tasksService.getAllPriorityList();\n      this.tasks = this.tasksService.getAllList();\n      this.initiForm();\n    }\n\n    initiForm() {\n      this.form = this.fb.group({\n        title: [null, [Validators.required]],\n        priority: [null, [Validators.required]]\n      });\n    }\n\n    onAddTask() {\n      this.addedTask = this.form.value;\n      this.addedTask.id = this.tasksService.getAllList().length + 1;\n      this.tasksService.addToList(this.addedTask);\n    }\n\n  }\n\n  AddComponent.ɵfac = function AddComponent_Factory(t) {\n    return new (t || AddComponent)(i0.ɵɵdirectiveInject(i1.TasksService), i0.ɵɵdirectiveInject(i2.FormBuilder));\n  };\n\n  AddComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: AddComponent,\n    selectors: [[\"app-add\"]],\n    inputs: {\n      showDialog: \"showDialog\"\n    },\n    decls: 25,\n    vars: 4,\n    consts: [[1, \"d-flex\", \"justify-content-end\"], [\"type\", \"button\", \"data-bs-toggle\", \"modal\", \"data-bs-target\", \"#exampleModal\", 1, \"justify-content-end\", \"btn\", \"btn-light\", \"plus-icon\"], [1, \"bi\", \"bi-plus\"], [\"id\", \"exampleModal\", \"tabindex\", \"-1\", \"aria-labelledby\", \"exampleModalLabel\", \"aria-hidden\", \"true\", 1, \"modal\", \"fade\"], [\"id\", \"dialog\", 1, \"modal-dialog\"], [1, \"modal-content\"], [1, \"modal-header\"], [\"id\", \"exampleModalLabel\", 1, \"modal-title\"], [\"type\", \"button\", \"data-bs-dismiss\", \"modal\", \"aria-label\", \"Close\", 1, \"btn-close\"], [1, \"modal-body\"], [3, \"formGroup\"], [1, \"label\"], [\"minlength\", \"4\", \"type\", \"text\", \"formControlName\", \"title\", \"required\", \"\", 1, \"form-control\"], [\"style\", \"color: red\", 4, \"ngIf\"], [\"formControlName\", \"priority\", \"label\", \"Choose priority\", 1, \"form-select\"], [\"selected\", \"\", \"value\", \"\", \"disabled\", \"\"], [3, \"ngValue\", 4, \"ngFor\", \"ngForOf\"], [1, \"modal-footer\"], [\"type\", \"button\", \"data-bs-dismiss\", \"modal\", 1, \"btn\", \"btn-outline-info\", 3, \"disabled\", \"click\"], [2, \"color\", \"red\"], [3, \"ngValue\"]],\n    template: function AddComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"button\", 1);\n        i0.ɵɵelement(2, \"i\", 2);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(3, \"div\", 3)(4, \"div\", 4)(5, \"div\", 5)(6, \"div\", 6)(7, \"h5\", 7);\n        i0.ɵɵtext(8, \"Add new task\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(9, \"button\", 8);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(10, \"div\", 9)(11, \"form\", 10)(12, \"label\", 11);\n        i0.ɵɵtext(13, \"Title\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(14, \"input\", 12);\n        i0.ɵɵtemplate(15, AddComponent_p_15_Template, 2, 0, \"p\", 13);\n        i0.ɵɵelementStart(16, \"label\", 11);\n        i0.ɵɵtext(17, \"Priority \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(18, \"select\", 14)(19, \"option\", 15);\n        i0.ɵɵtext(20, \"Choose priority\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(21, AddComponent_option_21_Template, 2, 2, \"option\", 16);\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(22, \"div\", 17)(23, \"button\", 18);\n        i0.ɵɵlistener(\"click\", function AddComponent_Template_button_click_23_listener() {\n          return ctx.onAddTask();\n        });\n        i0.ɵɵtext(24, \" Add \");\n        i0.ɵɵelementEnd()()()()();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(11);\n        i0.ɵɵproperty(\"formGroup\", ctx.form);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngIf\", ctx.form.controls[\"title\"].invalid && ctx.form.controls[\"title\"].value);\n        i0.ɵɵadvance(6);\n        i0.ɵɵproperty(\"ngForOf\", ctx.priority_list);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"disabled\", ctx.form.invalid);\n      }\n    },\n    dependencies: [i3.NgForOf, i3.NgIf, i2.ɵNgNoValidate, i2.NgSelectOption, i2.ɵNgSelectMultipleOption, i2.DefaultValueAccessor, i2.SelectControlValueAccessor, i2.NgControlStatus, i2.NgControlStatusGroup, i2.RequiredValidator, i2.MinLengthValidator, i2.FormGroupDirective, i2.FormControlName],\n    styles: [\".label[_ngcontent-%COMP%]{color:#000}\"]\n  });\n  return AddComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}