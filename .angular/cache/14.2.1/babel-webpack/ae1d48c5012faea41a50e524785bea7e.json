{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/tasks.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/forms\";\nimport * as i4 from \"@angular/common\";\n\nfunction EditTaskComponent_option_11_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 10);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const item_r1 = ctx.$implicit;\n    i0.ɵɵproperty(\"ngValue\", item_r1);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", item_r1, \" \");\n  }\n}\n\nconst _c0 = function () {\n  return [\"/\"];\n};\n\nexport let EditTaskComponent = /*#__PURE__*/(() => {\n  class EditTaskComponent {\n    constructor(service, route, router, fb) {\n      this.service = service;\n      this.route = route;\n      this.router = router;\n      this.fb = fb;\n    }\n\n    ngOnInit() {\n      this.route.params.subscribe(res => {\n        this.item = this.service.getAllList().find(i => i.id == res['id']);\n      });\n      this.priority_list = this.service.getAllPriorityList();\n      this.setupForm();\n    }\n\n    setupForm() {\n      this.form = this.fb.group({\n        id: [this.item.id, [Validators.required]],\n        title: [this.item.title, [Validators.required]],\n        priority: [this.item.priority, [Validators.required]]\n      });\n    }\n\n    onUpdateTask() {\n      this.item = this.form.value;\n      this.service.updateItem(this.item);\n    }\n\n  }\n\n  EditTaskComponent.ɵfac = function EditTaskComponent_Factory(t) {\n    return new (t || EditTaskComponent)(i0.ɵɵdirectiveInject(i1.TasksService), i0.ɵɵdirectiveInject(i2.ActivatedRoute), i0.ɵɵdirectiveInject(i2.Router), i0.ɵɵdirectiveInject(i3.FormBuilder));\n  };\n\n  EditTaskComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: EditTaskComponent,\n    selectors: [[\"app-edit-task\"]],\n    decls: 18,\n    vars: 4,\n    consts: [[1, \"row\", \"justify-content-center\"], [1, \"col-6\"], [3, \"formGroup\"], [\"type\", \"text\", \"formControlName\", \"title\", 1, \"form-control\"], [\"formControlName\", \"priority\", \"label\", \"Choose priority\", 1, \"form-select\"], [\"selected\", \"\", \"value\", \"\", \"disabled\", \"\"], [3, \"ngValue\", 4, \"ngFor\", \"ngForOf\"], [1, \"justify-content-center\", \"form-check\"], [\"type\", \"button\", 1, \"btn\", \"btn-outline-warning\", 2, \"margin-right\", \"6px\", 3, \"routerLink\"], [\"type\", \"button\", \"data-bs-dismiss\", \"modal\", 1, \"btn\", \"btn-outline-info\", 3, \"click\"], [3, \"ngValue\"]],\n    template: function EditTaskComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"form\", 2)(3, \"label\");\n        i0.ɵɵtext(4, \"Title\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(5, \"input\", 3);\n        i0.ɵɵelementStart(6, \"label\");\n        i0.ɵɵtext(7, \"priority\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(8, \"select\", 4)(9, \"option\", 5);\n        i0.ɵɵtext(10, \"Choose priority\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(11, EditTaskComponent_option_11_Template, 2, 2, \"option\", 6);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(12, \"br\");\n        i0.ɵɵelementStart(13, \"div\", 7)(14, \"button\", 8);\n        i0.ɵɵtext(15, \" Cancel \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(16, \"button\", 9);\n        i0.ɵɵlistener(\"click\", function EditTaskComponent_Template_button_click_16_listener() {\n          return ctx.onUpdateTask();\n        });\n        i0.ɵɵtext(17, \" Update \");\n        i0.ɵɵelementEnd()()()()();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"formGroup\", ctx.form);\n        i0.ɵɵadvance(9);\n        i0.ɵɵproperty(\"ngForOf\", ctx.priority_list);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"routerLink\", i0.ɵɵpureFunction0(3, _c0));\n      }\n    },\n    dependencies: [i4.NgForOf, i2.RouterLink, i3.ɵNgNoValidate, i3.NgSelectOption, i3.ɵNgSelectMultipleOption, i3.DefaultValueAccessor, i3.SelectControlValueAccessor, i3.NgControlStatus, i3.NgControlStatusGroup, i3.FormGroupDirective, i3.FormControlName]\n  });\n  return EditTaskComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}